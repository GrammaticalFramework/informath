concrete ConstantsEng of Constants = ConstantBaseEng **

-- generated by MkConstants.hs

open
  SyntaxEng,
  ParadigmsEng,
  SymbolicEng,
  Formal

in {
lin Dk_Type = mkNoun "type" ;
lin Dk_Nat = mkNoun "natural" "number" ;
lin Dk_Set = mkNoun "set" ;
lin Dk_Even = mkAdj "even" ;
lin Dk_Odd = mkAdj "odd" ;
lin Dk_Prime = mkAdj "prime" ;
lin Dk_Zero = mkConst "zero" "0" ;
lin Dk_Div = mkRel "divisible" "by" ;
lin Dk_Eq = mkCompar "equal" "to" "=" ;
lin Dk_Lt = mkCompar "less" "than" "<" ;
lin Dk_Gt = mkCompar "greater" "than" ">" ;
lin Dk_Succ = mkFun "successor" ;
lin Dk_sum = mkOper "sum" "+" ;
lin Dk_prod = mkOper "product" "\\times" <2 : Prec> ;
lin Dk_gcd = mkFun "greatest" "common" "divisor" ;
lin Dk_eqZero = mkLabel "equality of zero" ;
lin Dk_eqSucc = mkLabel "equality of successors" ;
lin Dk_eqSumZero = mkLabel "addition of zero" ;
lin Dk_eqSumSucc = mkLabel "addition of successors" ;
lin Dk_gcdLt = mkLabel "Theorem 12" ;
lin Dk_evenOdd = mkLabel "Theorem 13" ;
lin Dk_primeOdd = mkLabel "Theorem 14" ;
}
